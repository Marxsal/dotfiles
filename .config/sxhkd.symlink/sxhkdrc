#
# https://github.com/everbot/dotfiles
# bspwm hotkeys
#

# kill all active background programs that we started earlier
    # killall trayer \
    # killall nm-applet \
    # killall panel.sh \
    # killall panel_bar \
    # bspc quit
#killall trayer && killall nm-applet && killall panel.sh && killall bar && bspc quit
super + alt + Escape
    killall trayer; \
    killall nm-applet; \
    killall panel.sh; \
    killall panel_bar; \
    killall bar; \
    bspc quit;


# closing a window, close
super + w
    bspc window -c

super + t
    bspc desktop -l next

super + b
    bspc desktop -B

# switch between floating/fullscreen of the current focused window
super + {s,f}
    bspc window -t {floating,fullscreen}

# switch between the current desktop and the previous desktop
super + {grave,Tab}
    bspc {window,desktop} -f last

super + apostrophe
    bspc window -s last

super + {o,i}
    bspc control --record-history off; \
    bspc window {older,newer} -f; \
    bspc control --record-history on

super + y
    bspc window -w last.manual

# swap the position of the current window with the biggest window in the current
# desktop view
super + m
    bspc window -s biggest

# moving window around in the current desktop view
super + {_,shift + }{h,j,k,l}
    bspc window -{f,s} {left,down,up,right}

# move the current window to desktop number
#bspc {desktop -f, window -d} $(bspc query -M -m)/{1-9,10}
super + {_,shift + }{1-9,0}
    bspc {desktop -f,window -d} ^{1-9,10}

# rotate focusing each window in the current desktop view
# super + {_,shift + }c
alt + Tab
    bspc window -f {next,prev}

# circulate the leaves of the tree of the selected desktop
super + {comma,period}
    bspc desktop -C {backward,forward}

# go to the next/previous desktop
super + bracket{left,right}
    bspc desktop -f {prev,next}

super + ctrl + {h,j,k,l}
    bspc window -p {left,down,up,right}

super + ctrl + {_,shift + }space
    bspc {window -p cancel,desktop -c}

# resize the current focused window
super + alt + {h,j,k,l}
    bspc window -e {left -10,down +10,up -10,right +10}

# resize the current focused window in reversed direction
super + alt + shift + {h,j,k,l}
    bspc window -e {right -10,up +10,down -10,left +10}

# rotate view of the current desktop
super + r
    bspc desktop -R 90

super + ctrl + {1-9}
    bspc window -r 0.{1-9}


~button1
    bspc pointer -g focus

super + button{1-3}
    bspc pointer -g {move,resize_side,resize_corner}

super + !button{1-3}
    bspc pointer -t %i %i

super + @button{1-3}
    bspc pointer -u




#*******************************************************************************
# MONITOR handling
#*******************************************************************************

# switch to another monitor
super + {Left,Right}
    bspc monitor -f {next,prev}

# move the current window to next monitor
super + {_,shift + }{Left,Right}
    bspc {monitor -f,window -m} {next,prev}

# use super + alt + number to switch to a desktop [number] in an external
# monitor
# bspc monitor -f ^2; \
# bspc desktop -f ^{1-9,10};
# super + alt + {1-9,0}
    # bspc desktop -f ^1^{1-9,10}

#----------
# super + {1-9,0,a-c}
#     D={1-9,0,a-c}; \
#     M=$(bspc query --monitors --desktop $D); \
#     if [ $(bspc query --desktops --monitor $M | wc -l) -gt 1 ]; then \
#         if [ $(bspc query --desktops --desktop focused) != $D ]; then \
#             bspc desktop $D --to-monitor focused; \
#             bspc desktop $D --focus; \
#         fi; \
#     elif [ $(bspc query --monitors --monitor focused) != $M ]; then \
#         bspc desktop eDP1:focused --swap HDMI1:focused; \
#     fi;
#

# super +{1-9,0} is used, so we use alt
# alt + {1-9,0}
#     D={1-9,0}; \
#     M=$(bspc query --monitors --desktop $D); \
#     bspc monitor $M -f;



#*******************************************************************************
#
# wm independent hotkeys
#
#*******************************************************************************
super + Return
# alt + Return
    terminology

super + space
# alt + shift + p
#dmenu_run
#dmenu_run -fn 'Droid Sans Mono-9'
#use the script dmenu-recent.sh. Provided the scripts directory in dropbox is
#exported in bash
    dmenu-recent.sh

# switch to a running app
super + BackSpace
#dmenu-running-apps.sh
    dmenu-running-apps.sh

alt + shift + f
    firefox

# lower volume
super + Down
    amixer set Master 5%-

# increase volume
super + Up
    amixer set Master 5%+

# Print screen shortcut
Print
    cd ~/mytemp/; \
    scrot; \
    cd -
ctrl + @Print
    cd ~/mytemp/; \
    scrot -s; \
    cd -

# open FoxitReader
#wine 'C:\\windows\\command\\start.exe' /Unix /home/squallltt/.wine/dosdevices/c:/users/Public/Desktop/FoxitReader.lnk
#wine 'C:\\windows\\command\\start.exe' /Unix /home/squallltt/.wine/dosdevices/c:/users/Public/Desktop/PDF-Viewer.lnk
super + F10
    /usr/share/playonlinux/playonlinux --run "PDFXCview" %F

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd

