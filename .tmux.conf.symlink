# fix problem with vim colorscheme in tmux
# http://stackoverflow.com/questions/10158508/lose-vim-colorscheme-in-tmux-mode
# set -g default-terminal "rxvt"

# this fixes the HOME and END key problem
set -g default-terminal "screen-256color"

set-option -g default-shell /bin/zsh
set-option -g status-keys vi
set-window-option -g mode-keys vi

# On utf8
set -g utf8 on
set-option -g status-utf8 on
set-window-option -g utf8 on

# Change prefix to Ctrl+a
set -g prefix C-a
bind C-a send-prefix
unbind C-b

# address vim mode switching delay (http://superuser.com/a/252717/65504)
# https://github.com/tmux-plugins/tmux-sensible
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# y and p as in vim
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
# Copy selection to system clipboard (make sure xclip is installed)
# It seems xclip does not close STDOUT after it has read from tmux's buffer. As
# such, tmux doesn't know that the copy task has completed, and continues to
# /await xclip's termination, thereby rendering the window manager unresponsive.
# So we redirect STDOUT of xclip to /dev/null, or you can use an
# alternative command like xsel (https://wiki.archlinux.org/index.php/Tmux)
bind -t vi-copy 'y' copy-pipe 'xclip -in -selection clipboard >/dev/null'
bind -t vi-copy 'Space' halfpage-down
bind -t vi-copy 'Bspace' halfpage-up

# easy-to-remember split pane commands
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

## swapping:
bind-key N swap-pane -D
bind-key P swap-pane -U

# moving between windows with vim movement keys
# Press the prefix (Ctrl+a) then hold Ctrl key and press h or l to cycle through
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

##+ window title:
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I] #W'
set-window-option -g automatic-rename on


# http://man.cx/tmux
# http://man.cx/strftime%283%29
set -g status-left ''
# set -g status-right '#[fg=colour176,bold,bg=colour236,bold] %B #[fg=colour146,bold,bg=colour236,bold]%d, #[fg=colour173,bold,bg=colour236,bold]%Y#[fg=default] #[fg=colour234,bold,bg=colour12,bold] %R '
set -g status-right '#[fg=colour176,bold,bg=colour236,bold] #S #[fg=default] #[fg=colour234,bold,bg=colour12,bold] %R '
set -g status-right-length 100
set -g status-bg default
setw -g window-status-format '#[fg=colour180,bg=colour236] #I #[fg=colour180,bg=colour236] #W '
setw -g window-status-current-format '#[fg=colour236,bold,bg=colour180,bold] #I #[fg=colour236,bold,bg=#82FA58,bold] #W '

new  -s tung -n FileManager "cd ~/Dropbox/dev/ && ranger"
neww -n miscs
splitw -h -p 50 -t 0
selectw -t 1 # focus to which window
selectp -t 0 # focus to which pane

# Credit: some settings are copied from:
# https://gist.github.com/anonymous/6bebae3eb9f7b972e6f0

